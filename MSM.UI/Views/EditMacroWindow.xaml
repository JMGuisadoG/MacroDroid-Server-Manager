<Controls:MetroWindow x:Class="MSM.UI.Views.EditMacroWindow"
                      Name="window_EditMacro"
                      
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                      
        mc:Ignorable="d"
        
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        
        xmlns:mvvm="clr-namespace:MSM.UI.ViewModels"
                      
        Title="Macro Details" Height="450" Width="300"
                      
                      KeyUp="EditMacroWindow_KeyUp"
                      KeyDown="EditMacroWindow_KeyDown">

    <!--Interactivity de System.Windows.Interactivity me va a permitir enrutar eventos a relaycommands de la siguiente manera-->
    <!--<i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding Path=AddKeystrokeUpCommand}" ></i:InvokeCommandAction>
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">

        </i:EventTrigger>
    </i:Interaction.Triggers>-->

    <!-- Asignación del ViewModel-->
    <!--<Window.DataContext>
        <mvvm:EditMacroWindowViewModel></mvvm:EditMacroWindowViewModel>
    </Window.DataContext>-->

    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding Path=DeleteSelectedKeystrokeCommand}"></KeyBinding>
    </Window.InputBindings>

    <Window.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource AccentedSquareButtonStyle}">
            <Setter Property="BorderThickness" Value="1 1 0 0"></Setter>
            <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True"></Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!--Fila de la lista con las pulsaciones-->
            <RowDefinition Height="*"></RowDefinition>
            <!--Parte inferior con switch y botones OK y Cancel-->
            <RowDefinition Height="80"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <ListBox Name="lb_macro_keystrokes" BorderThickness="0 0 0 1" BorderBrush="Black"
                 Grid.Row="0" Grid.ColumnSpan="2"
                 ItemsSource="{Binding Path=KbMacro.Keystrokes, UpdateSourceTrigger=PropertyChanged}"
                 SelectedIndex="{Binding Path=SelectedKeystrokeIndex, Mode=TwoWay}">
            <ListBox.ItemTemplate>
                <!--Data template para mostrar la tecla en cuestión más el tipo de tecleo, si arriba o abajo-->
                <DataTemplate>
                    <!--TODO: Cambiar por un Grid para formatear correctamente espacios entre label e imagen-->
                    <Grid Name="stk_keystroke_template">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Label Content="{Binding Path=Key}" FontSize="16" Padding="10"></Label>
                        
                        <!--Icono con estilo, para que el source sea, segun el tipo de keystroke, flecha hacia arriba o hacia abajo-->
                        <Image Margin="5,0,5,0" Grid.Column="1">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=KeystrokeType}" Value="KeystrokeDown">
                                            <Setter Property="Source" Value="./Assets/Img/keystroke_down.png"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=KeystrokeType}" Value="KeystrokeUp">
                                            <Setter Property="Source" Value="./Assets/Img/keystroke_up.png"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        
                        <!--ContentControl con estilo para mostrar un control updown numerico para los keydown, no consigo hacerlo así por tanto
                        jugaré con la visibilidad por ahora.-->
                        <!--<Controls:NumericUpDown Grid.Column="2" Value="{Binding Path=Delay}">
                            <Controls:NumericUpDown.Style>
                                <Style TargetType="Controls:NumericUpDown">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=KeystrokeType}" Value="KeystrokeUp">
                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Controls:NumericUpDown.Style>
                        </Controls:NumericUpDown>-->
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Controls:ToggleSwitch IsChecked="{Binding Path=IsRecordingSwitchEnabled, Mode=TwoWay}"
                               Name="ts_editmode"
                               Focusable="False"
                               Grid.Row="1" 
                               Header="Escuchar teclas" 
                               OnLabel="Activado" OffLabel="Desactivado" 
                               
                               Padding="9"></Controls:ToggleSwitch>

        <!-- Grid con dos filas para botones OK y Cancelar, no se usa stackpanel porque 
        de esa manera no ocupan -->
        <Grid Grid.Column="1"
                Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <!--OK Button Row-->
                <RowDefinition></RowDefinition>
                <!--Cancel Button Row-->
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Name="btn_ok" 
                    Content="Ok"
                    Margin="0 -1"
                    Command="{Binding Path=OkCommand}"></Button>

            <Button Grid.Row="1" Name="btn_cancel"
                    Content="Cancelar"></Button>

        </Grid>


    </Grid>
</Controls:MetroWindow>
